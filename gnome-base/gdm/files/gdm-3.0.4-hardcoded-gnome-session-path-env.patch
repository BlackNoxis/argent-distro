From ece7e78e3ef5278382acbf8258950c8607a5d7df Mon Sep 17 00:00:00 2001
From: Alexandre Rostovtsev <tetromino@gmail.com>
Date: Sun, 7 Aug 2011 02:15:11 -0400
Subject: [PATCH] Don't hardcode gnome-session path, don't drop harmless env
 variables

Don't hardcode the location of the gnome-session executable to /usr/bin.
The system administrator may want have installed a custom wrapper in
/usr/local that he wants gdm to use instead.

Also, change the logic for how environment variables in spawned session
processes are set. Instead of inheriting i18n variables from the current
process and then setting the needed ones, we now:
1. set needed environment variables;
2. inherit env variables that had not been set in step 1 from the
   current process;
3. drop specific variables that may cause problems.

This allows a system administrator to force gdm to spawn sessions with a
particular custom environment variable set to e.g. work around hardware
driver bugs.

Addresses https://bugzilla.gnome.org/show_bug.cgi?id=656094
---
 daemon/gdm-greeter-session.c |    2 +-
 daemon/gdm-welcome-session.c |   43 ++++++++++++++++++++++++++---------------
 2 files changed, 28 insertions(+), 17 deletions(-)

diff --git a/daemon/gdm-greeter-session.c b/daemon/gdm-greeter-session.c
index a401508..7429314 100644
--- a/daemon/gdm-greeter-session.c
+++ b/daemon/gdm-greeter-session.c
@@ -148,7 +148,7 @@ gdm_greeter_session_new (const char *display_name,
         GObject *object;
 
         object = g_object_new (GDM_TYPE_GREETER_SESSION,
-                               "command", BINDIR "/gnome-session --session gdm --autostart="DATADIR"/gdm/autostart/LoginWindow/",
+                               "command", "gnome-session --session gdm --autostart="DATADIR"/gdm/autostart/LoginWindow/",
                                "server-dbus-path", GDM_GREETER_SERVER_DBUS_PATH,
                                "server-dbus-interface", GDM_GREETER_SERVER_DBUS_INTERFACE,
                                "server-env-var-name", "GDM_GREETER_DBUS_ADDRESS",
diff --git a/daemon/gdm-welcome-session.c b/daemon/gdm-welcome-session.c
index b8ec8d7..d0e6030 100644
--- a/daemon/gdm-welcome-session.c
+++ b/daemon/gdm-welcome-session.c
@@ -350,32 +350,28 @@ get_welcome_environment (GdmWelcomeSession *welcome_session,
         GPtrArray     *env;
         GHashTable    *hash;
         struct passwd *pwent;
-        static const char * const optional_environment[] = {
+        static const char * const lang_environment[] = {
                 "LANG", "LANGUAGE", "LC_CTYPE", "LC_NUMERIC", "LC_TIME",
                 "LC_COLLATE", "LC_MONETARY", "LC_MESSAGES", "LC_PAPER",
                 "LC_NAME", "LC_ADDRESS", "LC_TELEPHONE", "LC_MEASUREMENT",
                 "LC_IDENTIFICATION", "LC_ALL",
                 NULL
         };
+        static const char * const drop_environment[] = {
+                "MAIL", NULL
+        };
+        char **curr_environment;
         int i;
 
         load_lang_config_file (LANG_CONFIG_FILE,
-                               (const char **) optional_environment);
+                               (const char **) lang_environment);
+        curr_environment = g_listenv ();
         env = g_ptr_array_new ();
 
-        /* create a hash table of current environment, then update keys has necessary */
+        /* Create a hash table for environment variables.
+         * First, insert keys we need to set. */
         hash = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, g_free);
 
-        for (i = 0; optional_environment[i] != NULL; i++) {
-                if (g_getenv (optional_environment[i]) == NULL) {
-                        continue;
-                }
-
-                g_hash_table_insert (hash,
-                                     g_strdup (optional_environment[i]),
-                                     g_strdup (g_getenv (optional_environment[i])));
-        }
-
         if (welcome_session->priv->dbus_bus_address != NULL) {
                 g_hash_table_insert (hash,
                                      g_strdup ("DBUS_SESSION_BUS_ADDRESS"),
@@ -409,7 +405,6 @@ get_welcome_environment (GdmWelcomeSession *welcome_session,
         g_hash_table_insert (hash, g_strdup ("USERNAME"), g_strdup (welcome_session->priv->user_name));
 
         g_hash_table_insert (hash, g_strdup ("GDM_VERSION"), g_strdup (VERSION));
-        g_hash_table_remove (hash, "MAIL");
 
         g_hash_table_insert (hash, g_strdup ("HOME"), g_strdup ("/"));
         g_hash_table_insert (hash, g_strdup ("PWD"), g_strdup ("/"));
@@ -435,15 +430,31 @@ get_welcome_environment (GdmWelcomeSession *welcome_session,
                 g_hash_table_insert (hash, g_strdup ("GDM_SEAT_ID"), g_strdup (seat_id));
         }
 
-        g_hash_table_insert (hash, g_strdup ("PATH"), g_strdup (g_getenv ("PATH")));
-        g_hash_table_insert (hash, g_strdup ("WINDOWPATH"), g_strdup (g_getenv ("WINDOWPATH")));
         g_hash_table_insert (hash, g_strdup ("RUNNING_UNDER_GDM"), g_strdup ("true"));
         g_hash_table_insert (hash, g_strdup ("GVFS_DISABLE_FUSE"), g_strdup ("1"));
         g_hash_table_insert (hash, g_strdup ("DCONF_PROFILE"), g_strdup ("gdm"));
 
+        /* Second, insert environment variables from current process that haven't been set in the hash yet. */
+        for (i = 0; curr_environment[i] != NULL; i++) {
+                if (g_hash_table_lookup (hash, curr_environment[i]) != NULL ||
+                    g_getenv (curr_environment[i]) == NULL) {
+                        continue;
+                }
+
+                g_hash_table_insert (hash,
+                                     g_strdup (curr_environment[i]),
+                                     g_strdup (g_getenv (curr_environment[i])));
+        }
+
+        /* Third, remove undesirable environment variables. */
+        for (i = 0; drop_environment[i] != NULL; i++)
+                g_hash_table_remove (hash, drop_environment[i]);
+
         g_hash_table_foreach (hash, (GHFunc)listify_hash, env);
         g_hash_table_destroy (hash);
 
+        g_strfreev (curr_environment);
+
         g_ptr_array_add (env, NULL);
 
         return env;
-- 
1.7.6

